using DataProveedor.Services;
using Microsoft.AspNetCore.Mvc;

namespace DataProveedor.Controllers
{
    public class ProductoController : Controller
    {
        private readonly IProductos _Iproducto;

        public ProductoController(IProductos iproducto)
        {
            _Iproducto = iproducto;
        }

        public IActionResult Index()
        {
            return View(_Iproducto.GetAllProductos());
        }
    }
} /*Controller*/

using DataProveedor.Models;

namespace DataProveedor.Services
{
    public interface IProductos
    {
        IEnumerable<TbProducto> GetAllProductos();
    }
} /*Interface*/

using DataProveedor.Models;

namespace DataProveedor.Services
{
    public class ProductoRepository : IProductos
    {
        private VentasC conexion = new VentasC();   
        public IEnumerable<TbProducto> GetAllProductos()
        {
            return conexion.TbProductos;
        }
    }
} /*Producto Repository*/

@model IEnumerable<DataProveedor.Models.TbProducto>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<html>
<head>

</head>
<body>
    <h1>Listas de Productos-precioSuma</h1>
    @{
        decimal suma = 0;
        decimal max = 0;
        decimal less = 99999;
    }
    <table>
        <tr>
            <th>
                Codigo
            </th>
            <th>
                Nombre
            </th>
            <th>
                Precio
            </th>
        </tr>
        @foreach(var item in Model)
        {
            <tr>
                <td>
                    @item.CodPro
                </td>
                <td>
                    @item.DesPro
                </td>
                <td>
                    @item.PrePro
                </td>
            </tr>

            suma += item.PrePro;
            if(item.PrePro>max)
            {
                max = item.PrePro;
            }

            if(item.PrePro<less)
            {
                less = item.PrePro;                
            }

        }
    </table>
    
    <h4>La suma del precioProducto es: @suma </h4>
    <h4>Mayor precio es: @max</h4>
    <h4>Menor precio es: @less</h4>

</body>
</html>
/*HTML*/

/*RUTA*/
 [Route("Venta/suma/{suma}")]
        public IActionResult Reporte(double suma) 
        {
            ViewData["suma"] = suma;
            return View(suma);
        }

        [Route("Producto/promedio/{prom}")]
        public IActionResult Promedio(decimal prom)
        {
            ViewData["prom"] = prom;
            return View();
        }

        [Route("Producto/maximo/{max}")]
        public IActionResult Maximo(decimal max)
        {
            ViewData["max"] = max;
            return View();
        }


        [Route("Producto/minimo/{min}")]
        public IActionResult Minimo(decimal min)
        {
            ViewData["min"] = min;
            return View();
        }
 /*RUTAS HTML*/
 @model IEnumerable<Ejer01.Models.TbProducto>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<html>
    <body>
        <h1>Producto</h1>
        <div class="card-deck mx-auto">
        @{
            decimal acumulador = 0;
            decimal min = 999999;
            decimal max = 0;
            decimal promedio = 0;
        }
        @foreach (var item in Model)
        {
            <div class="card m-4" style="min-width: 18rem; max-width:30.5%">
                <div class="card-header">
                    <h3>@item.DesPro</h3>
                    <h3>@item.StkAct</h3>
                    <h3>@item.PrePro</h3>
                </div>
                <div class="card_footer text-center">
                    <a href="#" class="btn btn-primary m-2">Comprar</a>
                </div>
            </div>

            acumulador += @item.PrePro;
            

            if(@item.PrePro > max)
            {
                max = @item.PrePro;
            }

            if(@item.PrePro < min)
            {
                min = @item.PrePro;
            }

        }
        @{
            promedio = acumulador / @Model.Count();
        }

        <div class="card m-4" style="min-width: 18rem; max-width:30.5%">
            <h3>Suma de todos los precios:</h3>
            <a asp-action="suma" asp-route-id="@Math.Round(acumulador,2)" class="btn btn-primary m-2">Ver</a>
        </div>
        <div class="card m-4" style="min-width: 18rem; max-width:30.5%">
            <h3>El promedio de precios:</h3>
            <a asp-action="promedio" asp-route-id="@Math.Round(promedio,2)" class="btn btn-primary m-2">Ver</a>
        </div>
        <div class="card m-4" style="min-width: 18rem; max-width:30.5%">
            <h3>El precio maximo de todos los productos:</h3>
            <a asp-action="maximo" asp-route-id="@Math.Round(max,2)" class="btn btn-primary m-2">Ver</a>
        </div>
        <div class="card m-4" style="min-width: 18rem; max-width:30.5%">
            <h3>El precio minimo de todos los productos:</h3>
            <a asp-action="minimo" asp-route-id="@Math.Round(min,2)" class="btn btn-primary m-2">Ver</a>
        </div>
        </div>
    </body>
</html>

CONEXION
Data Source=LAPTOP-TEJDRN6S\LEANDRODB;Initial Catalog=VENTAS;Integrated Security=True;Connect Timeout=30;Encrypt=False;Trust Server Certificate=False;Application Intent=ReadWrite;Multi Subnet Failover=False


Scaffold-DBContext "Data Source=LAPTOP-TEJDRN6S\LEANDRODB;Initial Catalog=VENTAS;Integrated Security=True;Connect Timeout=30;Encrypt=False;Trust Server Certificate=False;Application Intent=ReadWrite;Multi Subnet Failover=False" Microsoft.EntityFrameworkCore.SQLServer -OutPutDir Models -Context VentasC

builder.Services.Add(new ServiceDescriptor(typeof(ICliente), new ClienteRepository()));

/Interface/
using sesion_12_04.Models;

namespace sesion_12_04.Service
{
    public interface IUsuario
    {
        void Add(Usuario usuario);
        IEnumerable<Usuario> GetAllUser();
    }
}
/Repository/
using sesion_12_04.Models;

namespace sesion_12_04.Service
{
    public class UsuarioRepository : IUsuario
    {
        private List<Usuario> lst = new List<Usuario>();
        public void Add(Usuario usuario)
        {
            lst.Add(usuario);
        }

        public IEnumerable<Usuario> GetAllUser()
        {
            return lst;
        }
    }
}

/Controller/

using Microsoft.AspNetCore.Mvc;
using WebAppSem04_C1M.Models;
using WebAppSem04_C1M.Service;

namespace WebAppSem04_C1M.Controllers
{
    public class UsuarioController : Controller
    {
        private readonly IUsuario _iusuario;  
        public UsuarioController(IUsuario usuario)
        {
            _iusuario= usuario; 
        }
        public IActionResult Index()
        {
            return View();
        }
        public IActionResult Listado(Usuario usuario)
        {
            if (ModelState.IsValid)
            {
                _iusuario.Add(usuario);
                var lst = _iusuario.GetAllUser();
                return View(lst);
            }
            else
            {
                return View("Index");
            }
            
        }

        [Route("Usuario/cargar/{codigo}")]
        public IActionResult Reporte(string codigo)
        {
            ViewData["cod"] = codigo;
            return View();
        }
    }
}

/Index/

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model WebAppSem04_C1M.Models.Usuario
@{
}
<html>
    <head>
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
        <LINK REL=StyleSheet HREF="~/css/style.css" TYPE="text/css" MEDIA=screen>
    </head>
    <body>
    <div class="container">

        <h1>FORMULARIO DE REGISTRO</h1>
        <form asp-controller="Usuario" asp-action="Listado" method="post">
            <div class="form-group">
                <label for="formGroupExampleInput">Id</label>
                <input type="text" class="form-control" id="formGroupExampleInput" placeholder="Id" asp-for="Id">
                <span asp-validation-for="Id" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="formGroupExampleInput2">Apellido Paterno</label>
                <input type="text" class="form-control" id="formGroupExampleInput2" placeholder="Apellido Paterno" asp-for="Paterno">
                <span asp-validation-for="Paterno" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="formGroupExampleInput2">Apellido Materno</label>
                <input type="text" class="form-control" id="formGroupExampleInput2" placeholder="Apellido Materno" asp-for="Materno">
                <span asp-validation-for="Materno" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label for="formGroupExampleInput2">Nombres</label>
                <input type="text" class="form-control" id="formGroupExampleInput2" placeholder="Nombres" asp-for="Nombres">
                <span asp-validation-for="Nombres" class="text-danger"></span>
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary" value="btn" name="grabar" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">Grabar</button>
                <button type="submit" class="btn btn-primary" value="btn" name="modificar">Modificar</button>
            </div>
            <div class="form-group">
            </div>

        </form>
    </div>

    </body>
</html>


/Vista Listado/

@model IEnumerable<WebAppSem04_C1M.Models.Usuario>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<html>
    <head>

    </head>
    <body>
        <table border="2">
            <tr>
                <td>CODIGO</td>
                <td>APELLIDO PATERNO</td>
                <td>CARGAR</td>
            </tr>
            @foreach(var item in Model)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.Paterno</td>
                    @{
                        string cadena = @item.Id + " " + @item.Paterno;
                        
                    }
                    <td><a asp-action="cargar" asp-route-id="@cadena">Cargar</a></td>
                </tr>            
            }
        </table>
    </body>
</html>

/Vista Reporte/
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<html>
    <head>

    </head>
    <body>
        <h1>@ViewData["cod"]</h1>
    </body>
</html>

/Venta
@model IEnumerable<Alumno.Models.TbVenta>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<html>
    <head>
    </head>
   
    <body>
    @{
        double acumulador = 0;
    }
        <table>
            <tr>
                <td>
                    Codigo
                </td>
                <td>
                    Precio
                </td>
            </tr>
            @foreach(var item in Model)
            {
                <tr>
                    <td>
                        @item.IdVenta
                    </td>
                    <td>
                        @item.Precio
                    </td>
                    
                </tr>
                acumulador+= item.Precio;
            }
            
    </table>
    <div class="card m-4" style="min-width: 18rem; max-width:30.5%">
        <a asp-action="suma" asp-route-id="@Math.Round(acumulador)" class="btn btn-primary m-2">Suma</a>
    </div>
    </body>
</html>
DB
CREATE VIEW Detalle_Alumno AS
Select TB_Alumno.Nombre ,TB_Ventas.Precio 
FROM TB_Ventas 
INNER JOIN TB_Alumno ON TB_Ventas.Id_Venta = TB_Alumno.Id_Alumno
